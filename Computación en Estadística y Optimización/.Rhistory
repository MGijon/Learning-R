cbind(freq = table(iris$Species), percentage = percentage)
summary(iris)
y <- iris[, 5]
boxplot(x[, i], main = names(iris)[i])
data("iris")
dim(iris)   # filas, columnas
for i in 1:4{
boxplot(x[, i], main = names(iris)[i])
}
x <- iris[, 1:4]
x
par(mfrow = c(1, 4))
for i in 1:4{
boxplot(x[, i], main = names(iris)[i])
}
boxplot(x[,i], main = names(iris)[i])
{
boxplot(x[,i], main = names(iris)[i])
}
ce,ar
install.packages("Hmisc")
library(Hsmisc)
library(Hmisc)
install.packages("Openxlex")
summary(iris)
sumary([1:50, ])
sumary(irirs[1:50, ])
sumary(iris[1:50, ])
summary(iris[1:50, ])
summary(iris[51:100,])
summary(iris[101:,])
summary(iris[101:150,])
naciento <- 04-04-1994
naciemiento
hoy <- 26-09-2017
hoy - nacimiento
hoy - naciento
clear
nacimiento <- as.Date("1994-04-04")
hoy <- as.Date("2017-09-26")
hoy - nacimiento
1994 + 70
muerte <- as.Date("2064-04-04")
muerte-hoy
16992 / 365.25
weekdays(nacimiento)
weekdays(muerte)
weekdays(hoy)
month(muerte)
months(muerte)
months(hoy)
months(nacimiento)
Sys.getlocale()
Sys.getlocale("LC_ALL")
Sys.getlocale("LC_ALL", "esp")
Sys.setlocale("LC_ALL", "esp")
Sys.setlocale("LC_ALL", "vas")
Sys.setlocale("LC_ALL", "Basque")
sys.setlocale("LC_ALL", "Basque")
Sys.setlocale("LC_ALL", "Basque")
which(is.na(Iris))  # si el dato es missing True, nos
Iris = data("Iris")
Iris = data("iris")
Iris = data("iris")
which(is.na(Iris))  # si el dato es missing True, nos
which(is.na(Iris), arr.ind = TRUE)
boxplot(mgp~cyl, Iris, main = 'primer boxplot con R', xlab = "eje x", ylab = "ylab")
boxplot(mgp~cyl, Iris, main = "primer boxplot con R", xlab = "eje x", ylab = "ylab")
install.packages(""datasets.load"")
install.packages(datasets.load")
mclwncsa
c kejaf aca
-sda
cnnkd
mankcsa
cknasc a
as a
nkanc
alcpmalksmclac+
install.packages("datasets")
install.packages("datasets")
load("iris")
data("iris")
iris
x <- iris[,1:2]
x
x <- iris[,1]
x
len(x)
dim(x)
summary(x)
x <- c(1:100)
y <- c(1:2:200)
y <- c(1:200:2)
y <- 2*x
plot(x, y)
xlabel("ejex")
plot(x, y, xlabel= "ejeX")
X = iris[,1]
X
length()
length(C)
length(X)
Y <- c(1:150)
length(Y)
plot(Y, X)
par(mfrow = x(1;4))
par(mfrow = x(1:4))
par(mfrow = c(1:4))
graphics.off()
par(mfrow = c(1:4))
par(mfrow = c(1, 4))
for (i in 1:4){}
for (i in 1:4){}
for (i in 1:4){plot(Y, iris[, i])}
summary(data("iris"))
Iris <- data("iris")
summary(Iris)
Iris_setosa = iris[iris == "setosa"]
Iris_setosa
data("iris")
Iris_setosa = iris[iris == "setosa"]
Iris_setosa
Iris_setosa[1:20, 1]
Iris_setosa[1:50, 1]
plot(vector)
vector
plot(p)
p <- c(1:20)
plot(p)
plot(p, type = "0", col = "blue")     # blue points overlayed by a line
plot(p, type = "o", col = "blue")     # blue points overlayed by a line
p <- c(1:20)
title("ponints", col.main = "red", font.main = 4)
p <- c(2, 3, 4.3, 2, 4, 3, 5, 4)
plot(p)         # just points
title("points", col.main = "red", font.main = 4)
plot(p, type = "o", col = "blue")     # blue points overlayed by a line
title("points", col.main = "red", font.main = 4)
title(main = "Money spend during a week", col.main = "red", font = 4)
graphics.off() # close all the graphics
dinner_spend <- c(10, 10, 10, 15.5, 10, 13, 17)
plot(lunch_spend, type = "o", col = "blue", ylimit = c(0, 6))     # using a y axis in a range (0, 6)
lines(dinner_spend, type = "o", pch = 22, lty = 2, col = "red") # red dashed line and square points
plot(lunch_spend, type = "o", col = "blue", ylim = c(0, 6))     # using a y axis in a range (0, 6)
lunch_spend <- c(10.99, 9, 6.1, 9.50, 6.30, 12, 18)
plot(lunch_spend, type = "o", col = "blue", ylim = c(0, 6))     # using a y axis in a range (0, 6)
plot(lunch_spend, type = "o", col = "blue")
plot(lunch_spend, type = "o", col = "blue", ylim = c(1, 12))
plot(lunch_spend, type = "o", col = "blue")     # using a y axis in a range (0, 6)
c = 1:10
c
mac(c)
max(c)
plot(lunch_spend, type = "o", col = "blue", ylim = c(1, max(lunch_spend) + 1))
lines(dinner_spend, type = "o", pch = 22, lty = 2, col = "red")
title("Money spend in food", col.main = "red", font.main = 4)
length((c))
graphics.off()
plot(lunch_spend, type = "o", col = "blue")     # using a y axis in a range (0, 6)
title("Lunch spend during a week", col.main = "red", font.main = 4)
plot(X)         # just points
plot(X)         # just points
X <- c(10.99, 9, 6.1, 9.50, 6.30, 12, 18)
plot(X)         # just points
plot(X, type = "o", col = "blue")     # blue points overlayed by a line, just that
"testeando los comentarios multiínea en R"
"coment"
/* comentario multilínea en R */
''
'''
aknda
oaneac
wevoan
x <- matrix(1:6, nrow = 2)
y <- 2*x
matplot(x, y) # just matplot, with no parameters
x <- matrix(1:45, nrow = 5)
y <- 2*x
matplot(x, y) # just matplot, with no parameters
matplot(x, y, type = 'o')
matplot(x, y, type = 'o')
matplot(x, y) # just matplot, with no parameters
matplot(x, y, type = 'o')
matplot(x, y, type = 'o', col = "black")
matplot(x, y, type = 'o', col = "black", lend = "p")
matplot(x, y, type = 'o', col = "black")
matplot(x, y, type = 'o', col = "black", lend = "p")
matplot(x, y, type = 'o', col = "black")
lends <- c("round","butt","square")
matplot(x, y, type = 'o', col = "black", lend = lends)
lends <- c("round","butt","square")
matplot(x, y, type = 'o', col = "black", lend = lends)
matplot(x, y, type = 'c', col = "black", lend = lends)
lends <- c("round","butt","square")
matplot(x, y, type = 'c', col = "black", lend = lends)
y <- 2*x
matplot(x, y) # just matplot, with no parameters
matplot(x, y, type = 'o', col = "black")
lends <- c("round","butt","square")
matplot(x, y, type = 'c', col = "black", lend = lends)
matplot(x, y, type = 'c', col = "black", lend = lends)
matplot(x, y, type = 'c', col = "black")
matplot(x, y, type = 'c', col = "black")
matplot(x, y, type = 'l', col = "black")
matplot(x, y, type = 'l', col = c("black", "red"))
data("iris")
matplot(iris)
summary(iris)
matplot(iris$Sepal.Length, main = "Sepal Length")
matplot(iris$Sepal.Length, main = "Sepal Length", ylab = "", sub = "of all the set")
matplot(iris[1:50, ]$Sepal.Length)
matplot(iris[1:50, ]$Sepal.Length, main = "Setosa Sepal Length", ylab = "", sub ="just for Setosa"
matplot(iris$Sepal.Length, main = "Sepal Length", ylab = "", sub = "of all the set")
matplot(iris[1:50, ]$Sepal.Length, main = "Setosa Sepal Length", ylab = "", sub ="just for Setosa"
matplot(iris[1:50, ]$Sepal.Length, main = "Setosa Sepal Length", ylab = "", sub ="just for Setosa")
matplot(iris$Sepal.Length, main = "Sepal Length", ylab = "", sub = "of all the set")
matplot(iris[1:50, ]$Sepal.Length, main = "Setosa Sepal Length", ylab = "", sub ="just for Setosa")
matplot(iris[1:50, ]$Sepal.Length, style = "o", main = "Setosa Sepal Length", ylab = "", sub ="just for Setosa")
matplot(iris[1:50, ]$Sepal.Length, style = "o", main = "Setosa Sepal Length", ylab = "", sub ="just for Setosa")
matplot(iris[1:50, ]$Sepal.Length, type = "o", main = "Setosa Sepal Length", ylab = "", sub ="just for Setosa")
matplot(iris[1:50, ]$Sepal.Length, type = "p", main = "Setosa Sepal Length", ylab = "", sub ="p type")
matplot(iris[1:50, ]$Sepal.Length, type = "n", main = "Setosa Sepal Length", ylab = "", sub ="o type")
matplot(iris[1:50, ]$Sepal.Length, type = "b", main = "Setosa Sepal Length", ylab = "", sub ="o type")
matplot(iris[1:50, ]$Sepal.Length, type = "b", main = "Setosa Sepal Length", ylab = "", sub ="b type")
matplot(iris[1:50, ]$Sepal.Length, type = "o", main = "Setosa Sepal Length", ylab = "", sub ="o type", lend = "round")
matplot(iris[1:50, ]$Sepal.Length, type = "o", main = "Setosa Sepal Length", ylab = "", sub ="o type", lend = "round")
matplot(iris[1:50, ]$Sepal.Length, type = "o", main = "Setosa Sepal Length", ylab = "", sub ="o type, lend round", lend = "round")
matplot(iris[1:50, ]$Sepal.Length, type = "o", main = "Setosa Sepal Length", ylab = "", sub ="o type, lend square", lend = "square")
matplot(iris[1:50, ]$Sepal.Length, type = "o", main = "Setosa Sepal Length", ylab = "", sub ="o type, lend square", lend = "square")
matplot(iris[1:50, ]$Sepal.Length, type = "c", main = "Setosa Sepal Length", ylab = "", sub ="c type, lend square", lend = "square")
matplot(iris[1:50, ]$Sepal.Length, type = "c", main = "Setosa Sepal Length", ylab = "", sub ="c type, lend butt", lend = "butt")
plot()
boxplot(x)
x <- c(2, 32, 3, 24, 2, 34, 2, 423, 2, 4, 2, 32, 23, 2, 342)
boxplot(x)
x <- c(2, 4, 2, 3, 4, 5, 7, 4)
boxplot(x)
boxplot(x, horizontal = TRUE)
boxplot(x, varwidth = TRUE) #  make box plot widths proportional to the square root of the sample sizes
boxplot(x, horizontal = TRUE) # make it horizontal
boxplot(x, varwidth = TRUE) #  make box plot widths proportional to the square root of the sample sizes
boxplot(x)
boxplot(x, varwidth = TRUE) #  make box plot widths proportional to the square root of the sample sizes
boxplot(x, horizontal = TRUE) # make it horizontal
boxplot(iris)
boxplot(iris$Sepal.Length, main = "Sepal Length", sub = "all the flowers")
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
boxplot(iris$Sepal.Length, main = "Sepal Length", sub = "all the flowers")
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
par(nfrow = c(1, 3))
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
boxplot(iris[51:100, ]$Sepal.Length, main = "Sepal Length", sub = "only Versicolor")
par(mfrow = c(1, 3))
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
boxplot(iris[51:100, ]$Sepal.Length, main = "Sepal Length", sub = "only Versicolor")
boxplot(iris[101:150, ]$Sepal.Length, main = "Sepal Length", sub = "only Virginica")
summary(iris)
boxplot(iris$Petal.Length, main = "Petal Length", sub = "all the flowers")
par()
boxplot(iris$Petal.Length, main = "Petal Length", sub = "all the flowers")
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
boxplot(iris[51:100, ]$Sepal.Length, main = "Sepal Length", sub = "only Versicolor")
boxplot(iris[101:150, ]$Sepal.Length, main = "Sepal Length", sub = "only Virginica")
par()
boxplot(iris$Petal.Length, main = "Petal Length", sub = "all the flowers")
par(mfrow=c(1,1))
boxplot(iris$Petal.Length, main = "Petal Length", sub = "all the flowers")
boxplot(iris$Petal.Length, main = "Petal Length", sub = "all the flowers", col = "red")
boxplot(iris$Sepal.Length, main = "Sepal Length", sub = "all the flowers")
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
par(mfrow = c(1, 3))
boxplot(iris[1:50, ]$Sepal.Length, main = "Sepal Length", sub = "only Setosa")
boxplot(iris[51:100, ]$Sepal.Length, main = "Sepal Length", sub = "only Versicolor")
boxplot(iris[101:150, ]$Sepal.Length, main = "Sepal Length", sub = "only Virginica")
par(mfrow=c(1,1))     # ugly way to reset 'par'
boxplot(iris$Petal.Length, main = "Petal Length", sub = "all the flowers", col = "red")
g_range == range(0, max(Y))   # returns TRUE TRUE
plot(lunch_spend, type = "o", col = "blue", ylim = g_range, axes = FALSE, ann = FALSE)
lines(dinner_spend, type = "o", pch = 22, lty = 2, col = "red")
title("Money spend in food", col.main = "red", font.main = 4)
days <- c("Mond", "Tues", "Wed", "Thu", "Fri", "Sat", "Sun")
axis(1, at = 1:length(days), lab = days)
axis(2, at = 4 * grange[2])
setwd("~/Documents/Programación/GIT/Learning-R/Computación en Estadística y Optimización")
state.area
state.x77
state.region
type(state.x77)
class(state.x77)
class(state.region)
head(state.region)
?state.x77
is.data.frame(state.x77)
is.matrix(state.x77)
length(state.x77)
dim(state.x77)        # dimensiones de la matriz
ncol(state.x77)       # número de columnas
nrow(state.x77)       # número de filas
str(state.x77)
attributes(state.x77) # más cosas nazis... muhahah
is.data.frame(state.x77)
is.matrix(state.x77)
class(state.x77)      # la mejor opción
ncol(state.x77)
ncol(state.x77)
dim(state.x77)
str(state.x77)
attributes(state.x77)
class(state.region)
head(state77)
state77$Region <- state.region    # creamos una nueva columna en el data.set y la llenamos con un...
levels(state77)
state77 <- data.frame(state.x77)  # convertimos la matriz en un data.frame
levels(state77)
state77$Region <- state.region    # creamos una nueva columna en el data.set y la llenamos con un...
head(state77)
head(state77)
state77$Region <- state.region    # creamos una nueva columna en el data.set y la llenamos con un...
head(state77)
state77 <- data.frame(state.x77)  # convertimos la matriz en un data.frame
head(state77)
nombres = c("Jose", "Juan", "Jimena")
nombres <- factor(nombres)
nombres
nombres = c("Jose", "Juan", "Jimena", "Jose", "Juan")
nombres <- factor(nombres)
nombres
matriz <- matriz(1:10, 2, 5)
matriz
matriz <- matriz(1:10, 2, 5)
matriz <- matrix(1:10, 2, 5)
matriz
datos <- data.frame(nombres, matriz)
datos <- data.frame(nombres, matriz)
datos <- data.frame(matriz, nombres)
nombres = c("Jose", "Juan", "Jimena", "Jose", "Juan")
nombres <- factor(nombres)
nombres
matriz <- matrix(1:5, 2, 5)
matriz
datos <- data.frame(nombres, matriz)
nombres
matriz <- matrix(1:5, 1, 5)
matriz
datos <- data.frame(nombres, matriz)
datos
datos
datos <- data.frame(matriz, nombres)
datos
ncol(states77)
length(states77)
states77 <- data.frame(state.x77, Regio = state.region)  # observemos así que el segunda parámetro de data.frame,
ncol(states77)
length(states77)
dim(states77)                   # filas, columnas
prod(dim(states77))             # número de datos del data.frame = filas x columnas, suponiendo no NA
head(states77)
states77$HS.Grad <- NULL
states77$Frost <- NULL
head(states77)
state77 <- data.frame(state.x77)  # data.set restaurado
head(state77)
states77 <- subset(states77, -c(HS.Grad, Frost))
head(state77)
states77["Alabama", "life"] <-  NA
states77["Alabama", "life"] <- NA
states77["Wyoming", "life"] <- NA
names(states77) <- substr(tolower(names(states77)), 1, 4)
names(states77)
names(datos)
class(names(datos))
class(names(datos))
tolower("HOLA")
substr("Hola Mundo", 1, 3)
setwd("~/Documents/Programación/GIT/Learning-R/Computación en Estadística y Optimización")
library(Hmisc)
load("Immunology.RData")
"Immunology.RData" %in% dir("Datasets_4")
"Immunology.RData" %in% dir("Datasets_5") # FALSE
load("/Datasets_5/Immunology.RData")
load("Datasets_5/Immunology.RData")
str(imuno)
str(imnuno)
str(immuno)
attributes(immuno)
summary(immuno)
which(is.na(immuno), arr.ind = TRUE)
quartz()
par(mfrow = c(2, 2), las = 1, font.main = 4, font.lab = 4, font.axis = 2, oma = c(0, 0, 1, 0), mar = c(3, 4, 4, 2))
quartz() # Abre una nueva ventana en Mac
par(mfrow = c(2, 2), las = 1, font.main = 4, font.lab = 4, font.axis = 2, oma = c(0, 0, 1, 0), mar = c(3, 4, 4, 2))
par(mfrow = c(2, 2), las = 1, font.main = 4, font.lab = 4, font.axis = 2, oma = c(0, 0, 1, 0), mar = c(3, 4, 4, 2))
boxplot(lympho1~group, immuno, col = 2:4, lwd = 2, ylab = "Células por microlítro", main = "Limfocitos", pars = list(boxwex = 0.7), pch = 16)
boxplot(cd4v1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1), main = "CD4 Cells", pars = list(boxwex = 0.7), pch = 16)
title("Marcadores immunológicos tras la 1ª visita", outer = TRUE, cex.main = 1.5)
quartz() # Abre una nueva ventana en Mac
par(mfrow = c(2, 2), las = 1, font.main = 4, font.lab = 4, font.axis = 2, oma = c(0, 0, 1, 0), mar = c(3, 4, 4, 2))
boxplot(lympho1~group, immuno, col = 2:4, lwd = 2, ylab = "Células por microlítro", main = "Limfocitos", pars = list(boxwex = 0.7), pch = 16)
boxplot(cd4v1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1), main = "CD4 Cells", pars = list(boxwex = 0.7), pch = 16)
boxplot(cd8v1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1), main = "CD8 Cells", pars = list(boxwex = 0.7), pch = 16)
boxplot(nkiller1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1), main = "Células Natural Killer", pars = list(boxwex = 0.7), pch = 16)
title("Marcadores immunológicos tras la primera visita", outer = TRUE, cex.main = 1.5)
par(mfrow = c(2, 2), las = 1, font.main = 4, font.lab = 4, font.axis = 2, oma = c(0, 0, 1, 0), mar = c(3, 4, 4, 2))
boxplot(lympho1~group, immuno, col = 2:4, lwd = 2, ylab = "Células por microlítro", main = "Limfocitos", pars = list(boxwex = 0.7), pch = 16)
boxplot(cd4v1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1), main = "CD4 Cells", pars = list(boxwex = 0.7), pch = 16)
boxplot(cd8v1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1), main = "CD8 Cells", pars = list(boxwex = 0.7), pch = 16)
boxplot(nkiller1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1), main = "Células Natural Killer", pars = list(boxwex = 0.7), pch = 16)
title("Marcadores immunológicos tras la primera visita", outer = TRUE, cex.main = 1.5)
boxplot(lympho1~group, immuno, col = 2:4, lwd = 2, ylab = "Células por microlítro", main = "Limfocitos", pars = list(boxwex = 0.7), pch = 16)
par(mfrow = c(2, 2), las = 1, font.main = 4, font.lab = 4, font.axis = 2, oma = c(0, 0, 1, 0), mar = c(3, 4, 4, 2))
boxplot(lympho1~group, immuno, col = 2:4, lwd = 2, ylab = "Células por microlítro", main = "Limfocitos", pars = list(boxwex = 0.7), pch = 16)
boxplot(cd4v1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1), main = "CD4 Cells", pars = list(boxwex = 0.7), pch = 16)
boxplot(cd8v1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1), main = "CD8 Cells", pars = list(boxwex = 0.7), pch = 16)
boxplot(nkiller1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1), main = "Células Natural Killer", pars = list(boxwex = 0.7), pch = 16)
title("Marcadores immunológicos tras la primera visita", outer = TRUE, cex.main = 1.5)
library(beeswarm)
tit <- label(immuno$lympho1)
install.packages("beeswarm")
library(beeswarm)
tit <- label(immuno$lympho1)
quartz(width = 12, height = 12)
quartz(width = 12, height = 12)
par(mfrow = c(2, 2), font = 2, font.lab = 4, font.axis = 2, las = 1, pch = 16)
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1), col = 2:4))
with(immuno, beeswarm(lympho1~group, main = tit, xlab = "", ylab = units(lympho1), col = 2:4))
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1)))
with(immuno, beeswarm(lympho1~group, main = tit, ylab = units(lympho1), add = TRUE, col = 2:4))
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1)))
with(immuno, beeswarm(lympho1~group, add = TRUE, pwcol = as.numeric(sex)))
legend("bottomright", levels(immuno$sex), col = 1:2, pch = 16, bty = "n", title = "Gender")
par(mfrow = c(2, 2), font = 2, font.lab = 4, font.axis = 2, las = 1, pch = 16)
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1), col = 2:4))
with(immuno, beeswarm(lympho1~group, main = tit, xlab = "", ylab = units(lympho1), col = 2:4))
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1)))
with(immuno, beeswarm(lympho1~group, main = tit, ylab = units(lympho1), add = TRUE, col = 2:4))
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1)))
with(immuno, beeswarm(lympho1~group, add = TRUE, pwcol = as.numeric(sex)))
legend("bottomright", levels(immuno$sex), col = 1:2, pch = 16, bty = "n", title = "Gender")
setwd("~/Documents/Programación/GIT/Learning-R/Computación en Estadística y Optimización")
par(mfrow = c(2, 2), font = 2, font.lab = 4, font.axis = 2, las = 1, pch = 16)
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1), col = 2:4))
with(immuno, beeswarm(lympho1~group, main = tit, xlab = "", ylab = units(lympho1), col = 2:4))
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1)))
with(immuno, beeswarm(lympho1~group, main = tit, ylab = units(lympho1), add = TRUE, col = 2:4))
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1)))
with(immuno, beeswarm(lympho1~group, add = TRUE, pwcol = as.numeric(sex)))
legend("bottomright", levels(immuno$sex), col = 1:2, pch = 16, bty = "n", title = "Gender")
rm(tit)
par(mfrow = c(1, 3), las = 1, font = 2, font.lab = 4, font.axis = 2, cex = 1)
hist(immuno$lympho1, xlab = units(immuno$lympho1), col = 3, main = label(immuno$lympho1))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = "steelblue", main = label(lympho1)))
par(mar = c(5, 5, 4, 2))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = "maroon",
ylab = "", freq = FALSE, main = label(lympho1)))
lines(density(immuno$lympho1), lwd = 3)
mtext("Density", 2, line = 4, las = 0)
dev.off()
par(mfrow = c(1, 3), las = 1, font = 2, font.lab = 4, font.axis = 2, cex = 1)
hist(immuno$lympho1, xlab = units(immuno$lympho1), col = 3, main = label(immuno$lympho1))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = "steelblue", main = label(lympho1)))
par(mar = c(5, 5, 4, 2))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = "maroon",
ylab = "", freq = FALSE, main = label(lympho1)))
lines(density(immuno$lympho1), lwd = 3)
par(mfrow = c(1, 3), las = 1, font = 2, font.lab = 4, font.axis = 2, cex = 1)
hist(immuno$lympho1, xlab = units(immuno$lympho1), col = 3, main = label(immuno$lympho1))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = "steelblue", main = label(lympho1)))
par(mar = c(5, 5, 4, 2))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = "maroon", ylab = "", freq = FALSE, main = label(lympho1)))
lines(density(immuno$lympho1), lwd = 3)
par(mfrow = c(1, 3), las = 1, font = 2, font.lab = 4, font.axis = 2, cex = 1)
hist(immuno$lympho1, xlab = units(immuno$lympho1), col = 3, main = label(immuno$lympho1))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = "steelblue", main = label(lympho1)))
par(mar = c(5, 5, 4, 2))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = "maroon", ylab = "", freq = FALSE, main = label(lympho1)))
lines(density(immuno$lympho1), lwd = 3)
par(mfrow = 2:1, las = 1, font = 2, font.lab = 4, font.axis = 2, oma = c(0, 0, 1, 0))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = rainbow(20), main = label(lympho1)))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = terrain.colors(20), main = label(lympho1)))
par(las = 1, font = 2, font.lab = 4, font.axis = 2, oma = c(0, 0, 1, 0))
hist(immuno, nclass = 15)
dev.off()
par(las = 1, font = 2, font.lab = 4, font.axis = 2, oma = c(0, 0, 1, 0))
hist(immuno, nclass = 15)
histograma <- hist(immuno$lympho1, breaks = 20, plot = FALSE)
histograma
str(histograma)
str(histograma)
str(histograma)
(hmax <- max(histo$counts))
(wmax <- which(histo$counts == max(histo$counts)))
(hmax <- max(histograma$counts))
(wmax <- which(histograma$counts == max(histo$counts)))
(wmax <- which(histograma$counts == max(histograma$counts)))
quartz(width = 8, height = 12)
par(las = 1, font.lab = 4, font.axis = 2)
plot(histograma, col = "royalblue")
text(histograma$mids[wmax], hmax, paste0("N=", hmax), adj = c(0.5, -0.1), font = 2)
(wmax <- which(histograma$counts == max(histograma$counts)))
quartz(width = 8, height = 12)
par(las = 1, font.lab = 4, font.axis = 2)
plot(histograma, col = "royalblue", xlab = units(immuno$lympho1), main = "Nivel linfocitario")
text(histograma$mids[wmax], hmax, paste0("N=", hmax), adj = c(0.5, -0.1), font = 2)
histograma <- hist(immuno$lympho1, breaks = 20, plot = FALSE)
histograma
str(histograma)
(hmax <- max(histograma$counts))
par(las = 1, font.lab = 4, font.axis = 2)
plot(histograma, col = "royalblue", xlab = units(immuno$lympho1), main = "Nivel linfocitario")
text(histograma$mids[wmax], hmax, paste0("N=", hmax), adj = c(0.5, -0.1), font = 2)
