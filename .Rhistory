lines(dinner_spend, type = "o", pch = 22, lty = 2, col = "red")
title("Money spend in food", col.main = "red", font.main = 4)
days <- c("Mond", "Tues", "Wed", "Thu", "Fri", "Sat", "Sun")
axis(1, at = 1:length(days), lab = days)
axis(2, at = 4 * grange[2])
nombres = c("Jose", "Juan", "Jimena", "Jose", "Juan")
nombres <- factor(nombres)
nombres
matriz <- matrix(1:5, 1, 5)
matriz
datos <- data.frame(nombres, matriz)
datos
datos <- data.frame(matriz, nombres)
mean(subset(states77, regi == "Northeast")$inco)
mean(subset(states77, as.numeric(regi) == 2)$inco)
state.x77
class(state.x77)      # es una matriz
is.matrix(state.x77)
is.data.frame(state.x77)
?state.x77            # despliega información sobre el dataset
state.region
class(state.region)   # es un factor ('vectores' que además de sus elementos tienen la información 'niveles', los elementos distintos presentes en el 'vector')
head(state.region)    # para obtener los niveles
length(state.x77)     # longitud de la matriz
dim(state.x77)        # dimensiones de la matriz: filas, columnas
ncol(state.x77)       # número de columnas
nrow(state.x77)       # número de filas
str(state.x77)        # imprimimos más información sobre las columnas
attributes(state.x77) # más información sobre las columnas
is.data.frame(state.x77)
is.matrix(state.x77)
ncol(state.x77)
class(state.x77)      # la mejor opción
dim(state.x77)
str(state.x77)
attributes(state.x77)
state77 <- data.frame(state.x77)  # convertimos la matriz en un data.frame
head(state77)                     # todavía no tenemos la variable Region añadida
state77$Region <- state.region    # creamos una nueva columna en el data.set y la llenamos con un...
head(state77)                     # Region ya está incluída en nuestro data.frame
class(state.region)               # ... factor
states77 <- data.frame(state.x77, Regio = state.region)  # observemos así que el segunda parámetro de data.frame,
nombres = c("Jose", "Juan", "Jimena", "Jose", "Juan")
nombres <- factor(nombres)
nombres
matriz <- matrix(1:5, 1, 5)
matriz
datos <- data.frame(nombres, matriz)
datos
datos <- data.frame(matriz, nombres)
datos
ncol(states77)
length(states77)
dim(states77)                   # filas, columnas
prod(dim(states77))             # número de datos del data.frame = filas x columnas, suponiendo no NA
head(states77)
states77$HS.Grad <- NULL
states77$Frost <- NULL
head(states77)
state77 <- data.frame(state.x77)  # data.set restaurado
head(state77)
states77 <- subset(states77, select = -c(HS.Grad, Frost))
head(state77)
names(states77) <- substr(tolower(names(states77)), 1, 4)
names(states77)
names(datos)               # devuelve los nombres de las columnas en el data.set...
class(names(datos))        # ... lo hace en forma de character
tolower("HOLA")            # tolower : devuelve la cadena que le pasemos en minúsculas
substr("Hola Mundo", 1, 3) # substr : devuelve una subcadena de la que le pasemos
states77["Alabama", "life"] <- NA
states77["Wyoming", "life"] <- NA
cor(states77$inco, states77$illi)
cor(states77$inco, states77$life, use = "complete.obs")
cor(states77$life, states77$illi, use = "c")
cor(states77[, c("inco", "illi", "life")], use = "complete.obs")
round(cor(states77[, c("inco", "illi", "life")], use = "pairwise.complete.obs"), 3)
mean(subset(states77, regi == "Northeast")$inco)
mean(subset(states77, as.numeric(regi) == 2)$inco)
with(states77, mean(inco[regi == "North Central"]))
with(subset(states77, regi == "West"), mean(inco))
with(states77, by(inco, regi, mean))
with(states77, tapply(inco, regi, mean))
(tap <- with(states77, tapply(inco, regi, mean)))
which.max(tap)
max(tap)
tap[which.max(tap)]
tap?
csakc
help("tap")
??tap
tap[c(1, 3, 4)]
tap[c(1, 3, 4)]
tap[which.max(tap)]
tap[c(1, 3, 4)]
library(Hmisc)
install.packages("Hmisc")
install.packages("Hmisc")
install.packages("Hmisc")
install.packages("Hmisc")
library(Hmisc)
setwd("~/Documents/Programación/GIT/Learning-R/Computación en Estadística y Optimización")
getwd() # solo funciona si la carpera donde están los datos se encuentra en el actual directorio de trabajo
"Immunology.sav" %in% dir("Datasets_4")
library(Hmisc)                  # Works with the present version of RStudio
library(Hmisc)                  # Works with the present version of RStudio
immuno <- spss.get("Datasets/Immunology.sav", datevars = c("datbirth", "datvisit1",
"datvisit2", "datvisit3"))
immuno <- spss.get("Datasets_4/Immunology.sav", datevars = c("datbirth", "datvisit1",
"datvisit2", "datvisit3"))
immuno <- spss.get("Datasets_4/Immunology.sav", datevars = c("datbirth", "datvisit1",
"datvisit2", "datvisit3"))
immuno <- spss.get("Datasets_4/Immunology.sav", datevars = c("datbirth", "datvisit1", "datvisit2", "datvisit3"))
str(inmuno)
immuno <- spss.get("Datasets_4/Immunology.sav", datevars = c("datbirth", "datvisit1", "datvisit2", "datvisit3"))
str(inmuno)
str(immuno)
head(immuno)
summary(immuno)
Label(immuno)
immuno$vol <- as.factor(immuno$vol)
head(immuno)
class(immuno$vol)
immuno <- spss.get("Datasets_4/Immunology.sav", datevars = c("datbirth", "datvisit1", "datvisit2", "datvisit3"))
class(immuno$vol)
class(immuno$vol)
immuno$vol <- as.factor(immuno$vol)
class(immuno$vol)
class(immuno$group)
immuno$group <- factor(immuno$group)
class(immuno$group)
summary(immune)
summary(immuno)
immuno[which(immuno == 9999)] <- NA
immuno[immuno == 9999)] <- NA
summary(immuno)
immuno[immuno == 9999)] <- NA
immuno[immuno == 9999] <- NA
for (i in 8:19){
units(immuno[, i]) = "Cells per microliter"
}
rm(i)
describe(immuno)
variables = c("x1", "x2")
nombres = c("A", "B")
dat
nombres = c("A", "B")
variables = c("x1", "x2")
nombres = c("A", "B")
dat <- data.frame(nombres, variables)
dat
head(dat)
summary(data)
summary(dat)
describe(dat)
Label(dat)
variables = c("x1", "x2")
nombres = c("A", "B")
dat <- data.frame(nombres, variables)
dat
head(dat)
summary(dat)
describe(dat)
Label(dat)
v <- c(1, 2, 3, 4, 5)
v
```{r include = TRUE}
1:5
seq(3, 15, 3)
rep(c(5, 10), 4)
x <- c(1:10)
5 + x
10 + c(1:3)
c(1:3) + c(1:5)
c(1:6) + c(1:12)  # las longitudes son múltiplos un de la otra
v <- c(1, 2, 3, 4, 5)
v
1:5
seq(3, 15, 3)
x <- c(NA, NaN, Inf, NULL, 4, 0)
1/x
x - x
1/x - (x - x)
1/x
x - x
1/x - (x - x)
x - x
1/x - (x - x)
1/x
x - x
1/x - (x - x)
x <- c(1:10)^2
x
x[3]
x[3]
x
x[c(1, 2, 3, 4)]
x[-c(1, 2, 3, 4)]
x[x > 20]
which(x > 20)
matrix(1:3, nrow = 2, ncol = 3)
matrix(1:9, 3, 3)
matrix(1:9, 3, 3)
c(1:3)
c(1:3)
matrix(1:9, 3, 3)
c(1:3) + matrix(1:9, 3, 3)
x[x > 7]          # elementos
m <- matrix(5:8, 3, 4)
m
m
which(x > 7)      # posiciones
m <-  matrix(1:10, 2, 5)
m
m[1, 1]
m[, 1]
m[1, ]
m[-1, -1]
cbind(x, y)
rbind(x, y)
y
y <- c(1:4)
x <- c(5:8)
y
x
cbind(x, y)
rbind(x, y)
x <- matrix(1:9, 3, 3)
x
mean(x)
apply(x, 1, mean) # actuamos sobre las filas de x
apply(x, 2, mean) # actuamos sobre las columnas de x
apply(x, 1, sort) # actuamos sobre las filas de la matriz x
x
apply(x, 1, sort) # actuamos sobre las filas de la matriz x
A <- matrix(1:9, 3, 3)
B <- matrix(10:18, 3, 3)
A
B
A %*% B
A * B
t(A)
det(A)
det(B)
diag(A)
```{r include = TRUE}
C <- matrix(c(2, 32, 32), 3, 3)
b = matrix(1:3, 3, 1)
solve(C, b)
solve(C)
eigen(A)
lista <- list(Nombre = "Jose", Pareja = "Elena", no.hijos = 3, edades.hijos = c(1, 2, 4))
str(lista)
lista$edades.hijos
lista$Pareja
lista$edades.hijos
lista$Pareja
lista[[4]]
lista[[2]]
lista[1]
lista[[1]]
```{r include = TRUE}
lista[1:3]
lista[1:3]
```{r include = TRUE}
lista[[1:3]]
lista[[1:3]]
lista[[1:3]]
fichero
pesos <- c(80.0, 54.5, 70, 89)
nombres <- c("Manuel", "Raquel", "Miguel", "Boliche")
fichero <- data.frame(Pesos = pesos, Individuos = nombres)
fichero
str(fichero)
fichero$Pesos
fichero[[2]]
fichero$Pesos
fichero[[2]]
fichero[2, ]
fichero[1, ]
variables = c("x1", "x2")
nombres = c("A", "B")
dat <- data.frame(nombres, variables)
dat
head(dat)
summary(dat)
describe(dat)
Label(dat)
sapply(faithful, summary)
lapply(faithful, summary)
lista <- c(2, 12, 12, 12, 12 , 1, 3, 4, 5, 2, 2, 2, 2, 4, 5, 6 ,8)
factor(lista)
head(iris)
iris$Species
tapply(iris$Petal.Length, iris$Species, mean)
load("Immunology.RData")
str(immuno)
attributes(immuno)
summary(immuno)
which(is.na(immuno), arr.ind = TRUE)
which(immuno == NA)
windows(width = 8, height = 8)               # Linux: x11(); Apple: quartz()
par(mfrow = c(2, 2), las = 1, font.main = 4, font.lab = 4, font.axis = 2,
oma = c(0, 0, 1, 0), mar = c(3, 4, 4, 2))
boxplot(lympho1~group, immuno, col = 2:4, lwd = 2, ylab = "Cells per microliter",
main = "Lymphocytes", pars = list(boxwex = 0.7), pch = 16)
boxplot(cd4v1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1),
main = "CD4 Cells", pars = list(boxwex = 0.7), pch = 16)
boxplot(cd8v1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1),
main = "CD8 Cells", pars = list(boxwex = 0.7), pch = 16)
boxplot(nkiller1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1),
main = "Natural Killer Cells", pars = list(boxwex = 0.7), pch = 16)
title("Immunological markers at 1st visit", outer = TRUE, cex.main = 1.5)
savePlot("Boxplots", type = "pdf")     # or any other format (jpg, png, tiff)
savePlot("Boxplots", type = "png")
pdf("Boxplot.pdf", width = 8, height = 8)
par(las = 1, font.main = 4, font.lab = 4, font.axis = 2)
boxplot(lympho1~group, immuno, col = 2:4, lwd = 2, ylab = "Cells per microliter",
main = "Lymphocytes", pars = list(boxwex = 0.7), pch = 16)
boxplot(cd4v1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1),
main = "CD4 Cells", pars = list(boxwex = 0.7), pch = 16)
boxplot(cd8v1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1),
main = "CD8 Cells", pars = list(boxwex = 0.7), pch = 16)
boxplot(nkiller1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1),
main = "Natural Killer Cells", pars = list(boxwex = 0.7), pch = 16)
dev.off()
dir.create("Figures")
setwd("Figures")
setwd("..")
unlink("Figures", recursive = TRUE)
library(beeswarm)
tit <- label(immuno$lympho1)
windows(width = 12, height = 12)
par(mfrow = c(2, 2), font = 2, font.lab = 4, font.axis = 2, las = 1, pch = 16)
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1), col = 2:4))
with(immuno, beeswarm(lympho1~group, main = tit, xlab = "", ylab = units(lympho1),
col = 2:4))
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1)))
with(immuno, beeswarm(lympho1~group, main = tit, ylab = units(lympho1), add = TRUE,
col = 2:4))
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1)))
with(immuno, beeswarm(lympho1~group, add = TRUE, pwcol = as.numeric(sex)))
legend("bottomright", levels(immuno$sex), col = 1:2, pch = 16, bty = "n",
title = "Gender")
dev.off()
rm(tit)
windows(width = 15)
par(mfrow = c(1, 3), las = 1, font = 2, font.lab = 4, font.axis = 2, cex = 1)
hist(immuno$lympho1, xlab = units(immuno$lympho1), col = 3,
main = label(immuno$lympho1))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1),
col = "steelblue", main = label(lympho1)))
par(mar = c(5, 5, 4, 2))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = "maroon",
ylab = "", freq = FALSE, main = label(lympho1)))
lines(density(immuno$lympho1), lwd = 3)
mtext("Density", 2, line = 4, las = 0)
dev.off()
colours()
windows(width = 8, height = 12)
par(mfrow = 2:1, las = 1, font = 2, font.lab = 4, font.axis = 2,
oma = c(0, 0, 1, 0))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = rainbow(20),
main = label(lympho1)))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1),
col = terrain.colors(20), main = label(lympho1)))
dev.off()
windows(width = 12, height = 12)
par(las = 1, font = 2, font.lab = 4, font.axis = 2, oma = c(0, 0, 1, 0))
hist(immuno, nclass = 15)
histo <- hist(immuno$lympho1, breaks = 20, plot = FALSE)
histo
str(histo)
windows(width = 9)
par(las = 1, font.lab = 4, font.axis = 2)
plot(histo, col = "olivedrab", xlab = units(immuno$lympho1), main = "Lymphocyte level")
text(...)
dev.off()
rm(histo, wmax, hmax)
par(las = 1, font.lab = 4, font.axis = 2)
plot(histo, col = "olivedrab", xlab = units(immuno$lympho1), main = "Lymphocyte level")
text(...)
dev.off()
windows(width = 9)
par(las = 1, font.lab = 4, font.axis = 2)
plot(histo, col = "olivedrab", xlab = units(immuno$lympho1), main = "Lymphocyte level")
text(...)
dev.off()
rm(histo, wmax, hmax)
setwd("..")
windows(width = 9)
unlink("Figures", recursive = TRUE)
library(beeswarm)
tit <- label(immuno$lympho1)
windows(width = 12, height = 12)
par(mfrow = c(2, 2), font = 2, font.lab = 4, font.axis = 2, las = 1, pch = 16)
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1), col = 2:4))
with(immuno, beeswarm(lympho1~group, main = tit, xlab = "", ylab = units(lympho1),
col = 2:4))
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1)))
with(immuno, beeswarm(lympho1~group, main = tit, ylab = units(lympho1), add = TRUE,
col = 2:4))
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1)))
with(immuno, beeswarm(lympho1~group, add = TRUE, pwcol = as.numeric(sex)))
legend("bottomright", levels(immuno$sex), col = 1:2, pch = 16, bty = "n",
title = "Gender")
dev.off()
rm(tit)
windows(width = 15)
legend("bottomright", levels(immuno$sex), col = 1:2, pch = 16, bty = "n",
title = "Gender")
par(mfrow = c(1, 3), las = 1, font = 2, font.lab = 4, font.axis = 2, cex = 1)
hist(immuno$lympho1, xlab = units(immuno$lympho1), col = 3,
main = label(immuno$lympho1))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1),
col = "steelblue", main = label(lympho1)))
par(mar = c(5, 5, 4, 2))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = "maroon",
ylab = "", freq = FALSE, main = label(lympho1)))
lines(density(immuno$lympho1), lwd = 3)
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = "maroon",
ylab = "", freq = FALSE, main = label(lympho1)))
lines(density(immuno$lympho1), lwd = 3)
mtext("Density", 2, line = 4, las = 0)
dev.off()
colours()
library(Hmisc)
load("Immunology.RData")
str(immuno)
attributes(immuno)
summary(immuno)
which(is.na(immuno), arr.ind = TRUE)
which(immuno == NA)
windows(width = 8, height = 8)               # Linux: x11(); Apple: quartz()
par(mfrow = c(2, 2), las = 1, font.main = 4, font.lab = 4, font.axis = 2,
oma = c(0, 0, 1, 0), mar = c(3, 4, 4, 2))
boxplot(lympho1~group, immuno, col = 2:4, lwd = 2, ylab = "Cells per microliter",
main = "Lymphocytes", pars = list(boxwex = 0.7), pch = 16)
boxplot(cd4v1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1),
main = "CD4 Cells", pars = list(boxwex = 0.7), pch = 16)
boxplot(cd8v1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1),
main = "CD8 Cells", pars = list(boxwex = 0.7), pch = 16)
boxplot(nkiller1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1),
main = "Natural Killer Cells", pars = list(boxwex = 0.7), pch = 16)
title("Immunological markers at 1st visit", outer = TRUE, cex.main = 1.5)
savePlot("Boxplots", type = "pdf")     # or any other format (jpg, png, tiff)
savePlot("Boxplots", type = "png")
pdf("Boxplot.pdf", width = 8, height = 8)
par(las = 1, font.main = 4, font.lab = 4, font.axis = 2)
boxplot(lympho1~group, immuno, col = 2:4, lwd = 2, ylab = "Cells per microliter",
main = "Lymphocytes", pars = list(boxwex = 0.7), pch = 16)
boxplot(cd4v1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1),
main = "CD4 Cells", pars = list(boxwex = 0.7), pch = 16)
boxplot(cd8v1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1),
main = "CD8 Cells", pars = list(boxwex = 0.7), pch = 16)
boxplot(nkiller1~group, immuno, col = 2:4, lwd = 2, ylab = units(immuno$lympho1),
main = "Natural Killer Cells", pars = list(boxwex = 0.7), pch = 16)
dev.off()
dir.create("Figures")
setwd("Figures")
setwd("..")
unlink("Figures", recursive = TRUE)
library(beeswarm)
tit <- label(immuno$lympho1)
windows(width = 12, height = 12)
par(mfrow = c(2, 2), font = 2, font.lab = 4, font.axis = 2, las = 1, pch = 16)
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1), col = 2:4))
with(immuno, beeswarm(lympho1~group, main = tit, xlab = "", ylab = units(lympho1),
col = 2:4))
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1)))
with(immuno, beeswarm(lympho1~group, main = tit, ylab = units(lympho1), add = TRUE,
col = 2:4))
with(immuno, boxplot(lympho1~group, main = tit, ylab = units(lympho1)))
with(immuno, beeswarm(lympho1~group, add = TRUE, pwcol = as.numeric(sex)))
legend("bottomright", levels(immuno$sex), col = 1:2, pch = 16, bty = "n",
title = "Gender")
dev.off()
rm(tit)
windows(width = 15)
par(mfrow = c(1, 3), las = 1, font = 2, font.lab = 4, font.axis = 2, cex = 1)
hist(immuno$lympho1, xlab = units(immuno$lympho1), col = 3,
main = label(immuno$lympho1))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1),
col = "steelblue", main = label(lympho1)))
par(mar = c(5, 5, 4, 2))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = "maroon",
ylab = "", freq = FALSE, main = label(lympho1)))
lines(density(immuno$lympho1), lwd = 3)
mtext("Density", 2, line = 4, las = 0)
windows(width = 8, height = 12)
par(mfrow = 2:1, las = 1, font = 2, font.lab = 4, font.axis = 2,
oma = c(0, 0, 1, 0))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1), col = rainbow(20),
main = label(lympho1)))
with(immuno, hist(lympho1, breaks = 20, xlab = units(lympho1),
col = terrain.colors(20), main = label(lympho1)))
windows(width = 9)
par(las = 1, font.lab = 4, font.axis = 2)
plot(histo, col = "olivedrab", xlab = units(immuno$lympho1), main = "Lymphocyte level")
text(...)
rm(histo, wmax, hmax)
hist(immuno, nclass = 15)
histo <- hist(immuno$lympho1, breaks = 20, plot = FALSE)
histo
str(histo)
windows(width = 9)
par(las = 1, font.lab = 4, font.axis = 2)
plot(histo, col = "olivedrab", xlab = units(immuno$lympho1), main = "Lymphocyte level")
text(...)
dev.off()
windows(width = 9)
par(las = 1, font.lab = 4, font.axis = 2)
plot(histo, col = "olivedrab", xlab = units(immuno$lympho1), main = "Lymphocyte level")
